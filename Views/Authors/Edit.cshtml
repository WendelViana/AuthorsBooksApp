@model AuthorsBooksApp.Models.Author

<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Dev Test</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
          integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
          crossorigin="anonymous">

    <style>
        body {
            padding-top: 5rem;
        }
    </style>
</head>

<body class="container">

    <nav class="navbar navbar-expand-md navbar-dark fixed-top bg-dark" style="padding:10pt">
        <a class="navbar-brand" href="#">DS - DevTest</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarsExampleDefault"
                aria-controls="navbarsExampleDefault" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarsExampleDefault">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("Index", "Home")">Home</a>
                </li>
                <li class="nav-item active">
                    <a class="nav-link" href="@Url.Action("Index", "Authors")">Authors</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("Index", "Books")">Books</a>
                </li>
            </ul>
        </div>
    </nav>

    <main role="main">
        <h2>Edit Author</h2>
        <div class="row">
            <div class="col-md-12 order-md-1">
                @using (Html.BeginForm("Update", "Authors", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate", onsubmit = "return validateForm()" }))
                {
                    @Html.HiddenFor(m => m.Id)

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="FirstName">First name</label>
                            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", placeholder = "First name", required = "required" })
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="LastName">Last name</label>
                            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", placeholder = "Last name", required = "required" })
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="Email">Email <span class="text-muted">(Optional)</span></label>
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "you@example.com" })
                    </div>

                    <div class="mb-3">
                        <label for="Phone">Phone</label>
                        @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
                    </div>

                    <div class="mb-3">
                        <label for="Address">Address</label>
                        @Html.TextBoxFor(m => m.Address1, new { @class = "form-control", placeholder = "1234 Main St", required = "required" })
                    </div>

                    <div class="mb-3">
                        <label for="Address2">Address 2 <span class="text-muted">(Optional)</span></label>
                        @Html.TextBoxFor(m => m.Address2, new { @class = "form-control", placeholder = "Apartment or suite" })
                    </div>

                    <div class="mb-3">
                        <label for="City">City </label>
                        @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
                    </div>

                    <div class="row">
                        <div class="col-md-5 mb-3">
                            <label for="Country">Country</label>
                            @Html.DropDownListFor(m => m.Country,
                                new SelectList(new[] { "United States", "Other" }, Model.Country),
                                new { @class = "form-select d-block w-100", required = "required" })
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="State">State</label>
                            @Html.DropDownListFor(m => m.State,
                                new SelectList(new[] { "California", "New York" }, Model.State),
                                new { @class = "form-select d-block w-100", required = "required" })
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="Zip">Zip</label>
                            @Html.TextBoxFor(m => m.Zip, new { @class = "form-control", placeholder = "ZIP Code", required = "required" })
                        </div>
                    </div>

                    <button type="submit" class="btn btn-primary">Save Changes</button>
                }
            </div>
        </div>
    </main>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"
            integrity="sha256-/xUj+3OJ+Y3K0Q3F5Y58FQJGZtzyqo6hW8tvZlz3txo="
            crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
            crossorigin="anonymous"></script>

    <script>
        function validateForm() {
            var form = document.querySelector('.needs-validation');
            if (form.checkValidity() === false) {
                event.preventDefault();
                event.stopPropagation();
            }
            form.classList.add('was-validated');
            return form.checkValidity();
        }
    </script>
</body>
</html>
